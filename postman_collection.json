{
	"info": {
		"_postman_id": "122d2da6-3ea3-4a4b-8092-1e5e853aa1a5",
		"name": "Prince's Theatre BE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GetMovies",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "336255d5-fcaa-4d22-af0e-d3247c73fba0",
						"exec": [
							"var template = `",
							"<table width=\"80%\" align=\"center\">",
							"    <tr><td style=\"text-align:center;font-size:25px\" colspan=\"4\">Prince's Theatre</td></tr>",
							"    <tr><td style=\"text-align:center;font-size:18px\" colspan=\"4\">Classic Movies At Home</td></tr>",
							"    <tr><td style=\"text-align:center;font-size:14px\" colspan=\"4\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation</td></tr>",
							"    {{#each response}}",
							"        <tr>",
							"            {{#each this}}",
							"                <td style=\"text-align:left\"><a href=\"{{MovieURL}}\">{{Title}}</a></td>",
							"            {{/each}}",
							"        </tr>",
							"    {{/each}}",
							"    {{#if notReliable}}",
							"        <tr><td style=\"text-align:center;font-size:12px\" colspan=\"4\">Movie listing may not be accurate, try refreshing</td></tr>",
							"    {{/if}}",
							"</table>",
							"`;",
							"",
							"const movies = pm.response.json()",
							"",
							"let tRows = []",
							"let tRow = []",
							"let isReliable = true",
							"",
							"tRows.push(tRow)",
							"",
							"for (i = 0; i < movies.length; i++) {",
							"    const movie = movies[i]",
							"    movie.MovieURL = \"https://\" + pm.request.url.getHost() + \"/Prod/movie?movieID=\" + movie.MovieID",
							"    tRow.push(movie)",
							"",
							"    if ((i + 1) % 4 == 0) {",
							"        tRow = []",
							"        tRows.push(tRow)",
							"    }",
							"    if (!movie.IsReliable)",
							"        isReliable = false",
							"}",
							"",
							"pm.visualizer.set(template, {",
							"    response: tRows,",
							"    notReliable: !isReliable",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{x-api-key}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "x-api-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman.",
						"key": "x-api-key",
						"value": "{{x-api-key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{endpoint}}/movies",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"movies"
					]
				},
				"description": "Gets the available movies"
			},
			"response": []
		},
		{
			"name": "GetMovie 3748528",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d2b741fb-ac60-4ad6-8c19-962f385e1247",
						"exec": [
							"var template = `",
							"<table width=\"80%\" align=\"center\">    ",
							"    <tr><td style=\"border:0px;text-align:center;font-size:25px\" colspan=\"2\">{{movie.Title}}</td></tr>",
							"    <tr><td style=\"border:0px;text-align:center\" colspan=\"2\"><img src={{movie.Poster}}></img></td></tr>",
							"    <tr>",
							"        <td style=\"width:50%;border:0px;text-align:right\">{{loProvider}}</td>",
							"        <td style=\"width:50%;border:0px;text-align:left\">{{loPrice}}</td>",
							"    </tr>",
							"    <tr>",
							"        <td style=\"width:50%;border:0px;text-align:right\">{{hiProvider}}</td>",
							"        <td style=\"width:50%;border:0px;text-align:left\">{{hiPrice}}</td>",
							"    </tr>",
							"    {{#if notReliable}}",
							"    <tr>",
							"        <td style=\"border:0px;text-align:center;font-size:12px\" colspan=\"2\">Movie prices may not be accurate, try refreshing</td>",
							"    </tr>",
							"    {{/if}}",
							"</table>",
							"`;",
							"",
							"function compare(m1, m2) {",
							"    if (m1.Price < m2.Price) ",
							"        return -1",
							"    if (m1.Price > m2.Price)",
							"        return 1",
							"    return 0",
							"}",
							"",
							"const movies = pm.response.json();",
							"movies.sort(compare)",
							"const movie = movies[0]",
							"",
							"pm.visualizer.set(template, {",
							"    response: movie,",
							"    movie: movie,",
							"    loProvider: movies[0].Provider,",
							"    loPrice: movies[0].Price,",
							"    hiProvider: movies[1].Provider,",
							"    hiPrice: movies[1].Price,",
							"    notReliable: movies[0].IsReliable && movies[1].IsReliable",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{x-api-key}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "x-api-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"type": "text",
						"value": "{{x-api-key}}",
						"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman."
					}
				],
				"url": {
					"raw": "{{endpoint}}/movie?movieId=3748528",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"movie"
					],
					"query": [
						{
							"key": "movieId",
							"value": "3748528"
						}
					]
				},
				"description": "Gets the available movies"
			},
			"response": []
		},
		{
			"name": "GetMovie 0121765",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4edcc121-e9c5-4f99-bff8-ec47e1f3288c",
						"exec": [
							"var template = `",
							"<table width=\"80%\" align=\"center\">    ",
							"    <tr><td style=\"border:0px;text-align:center;font-size:25px\" colspan=\"2\">{{movie.Title}}</td></tr>",
							"    <tr><td style=\"border:0px;text-align:center\" colspan=\"2\"><img src={{movie.Poster}}></img></td></tr>",
							"    <tr>",
							"        <td style=\"width:50%;border:0px;text-align:right\">{{loProvider}}</td>",
							"        <td style=\"width:50%;border:0px;text-align:left\">{{loPrice}}</td>",
							"    </tr>",
							"    <tr>",
							"        <td style=\"width:50%;border:0px;text-align:right\">{{hiProvider}}</td>",
							"        <td style=\"width:50%;border:0px;text-align:left\">{{hiPrice}}</td>",
							"    </tr>",
							"    {{#if notReliable}}",
							"    <tr>",
							"        <td style=\"border:0px;text-align:center;font-size:12px\" colspan=\"2\">Movie prices may not be accurate, try refreshing</td>",
							"    </tr>",
							"    {{/if}}",
							"</table>",
							"`;",
							"",
							"function compare(m1, m2) {",
							"    if (m1.Price < m2.Price) ",
							"        return -1",
							"    if (m1.Price > m2.Price)",
							"        return 1",
							"    return 0",
							"}",
							"",
							"const movies = pm.response.json();",
							"movies.sort(compare)",
							"const movie = movies[0]",
							"",
							"pm.visualizer.set(template, {",
							"    response: movie,",
							"    movie: movie,",
							"    loProvider: movies[0].Provider,",
							"    loPrice: movies[0].Price,",
							"    hiProvider: movies[1].Provider,",
							"    hiPrice: movies[1].Price,",
							"    notReliable: movies[0].IsReliable && movies[1].IsReliable",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{x-api-key}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "x-api-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"type": "text",
						"value": "{{x-api-key}}",
						"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman."
					}
				],
				"url": {
					"raw": "{{endpoint}}/movie?movieId=0121765",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"movie"
					],
					"query": [
						{
							"key": "movieId",
							"value": "0121765"
						}
					]
				},
				"description": "Gets the available movies"
			},
			"response": []
		},
		{
			"name": "GetMovie 0076759",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0bb4ac3f-9af0-4b69-ab88-983c8331a09a",
						"exec": [
							"var template = `",
							"<table width=\"80%\" align=\"center\">    ",
							"    <tr><td style=\"border:0px;text-align:center;font-size:25px\" colspan=\"2\">{{movie.Title}}</td></tr>",
							"    <tr><td style=\"border:0px;text-align:center\" colspan=\"2\"><img src={{movie.Poster}}></img></td></tr>",
							"    <tr>",
							"        <td style=\"width:50%;border:0px;text-align:right\">{{loProvider}}</td>",
							"        <td style=\"width:50%;border:0px;text-align:left\">{{loPrice}}</td>",
							"    </tr>",
							"    <tr>",
							"        <td style=\"width:50%;border:0px;text-align:right\">{{hiProvider}}</td>",
							"        <td style=\"width:50%;border:0px;text-align:left\">{{hiPrice}}</td>",
							"    </tr>",
							"    {{#if notReliable}}",
							"    <tr>",
							"        <td style=\"border:0px;text-align:center;font-size:12px\" colspan=\"2\">Movie prices may not be accurate, try refreshing</td>",
							"    </tr>",
							"    {{/if}}",
							"</table>",
							"`;",
							"",
							"function compare(m1, m2) {",
							"    if (m1.Price < m2.Price) ",
							"        return -1",
							"    if (m1.Price > m2.Price)",
							"        return 1",
							"    return 0",
							"}",
							"",
							"const movies = pm.response.json();",
							"movies.sort(compare)",
							"const movie = movies[0]",
							"",
							"pm.visualizer.set(template, {",
							"    response: movie,",
							"    movie: movie,",
							"    loProvider: movies[0].Provider,",
							"    loPrice: movies[0].Price,",
							"    hiProvider: movies[1].Provider,",
							"    hiPrice: movies[1].Price,",
							"    notReliable: movies[0].IsReliable && movies[1].IsReliable",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{x-api-key}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "x-api-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"type": "text",
						"value": "{{x-api-key}}",
						"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman."
					}
				],
				"url": {
					"raw": "{{endpoint}}/movie?movieId=0076759",
					"host": [
						"{{endpoint}}"
					],
					"path": [
						"movie"
					],
					"query": [
						{
							"key": "movieId",
							"value": "0076759"
						}
					]
				},
				"description": "Gets the available movies"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}